name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Get History
        id: get_history
        run: |
          chmod +x history.sh
          output=$(./history.sh)
          echo "$output" > history.md

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAGE_ACTION_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body_path: history.md

      - name: Build, Sign and Upload APKs
        run: |
          for variant in '' 'mobile' 'ipv6'; do
            ./gradlew clean && ./gradlew assembleRelease -Pnet=$variant
            apk_file="app/build/outputs/apk/release/app-release-unsigned.apk"
            if [ "$variant" == "mobile" ]; then
              apk_file="app/build/outputs/apk/release/app-release-unsigned-mobile.apk"
            elif [ "$variant" == "ipv6" ]; then
              apk_file="app/build/outputs/apk/release/app-release-unsigned-ipv6.apk"
            fi

            # Sign APK
            signed_apk="app/build/outputs/apk/release/app-release-unsigned-signed.apk"
            if [ "$variant" == "mobile" ]; then
              signed_apk="app/build/outputs/apk/release/app-release-unsigned-signed-mobile.apk"
            elif [ "$variant" == "ipv6" ]; then
              signed_apk="app/build/outputs/apk/release/app-release-unsigned-signed-ipv6.apk"
            fi
            
            # Sign APK
            echo "Signing $apk_file"
            /usr/local/lib/android/sdk/build-tools/34.0.0/apksigner sign \
              --ks app/build/outputs/apk/release/signingKey.jks \
              --ks-key-alias ${{ secrets.ALIAS }} \
              --ks-pass pass:${{ secrets.KEYSTORE_PASSWORD }} \
              --key-pass pass:${{ secrets.ALIAS_PASSWORD }} \
              --out $signed_apk \
              $apk_file

            # Set asset name and upload
            VERSION_WITHOUT_V=$(echo '${{ github.ref_name }}' | sed 's/^v//')
            asset_name="my-tv-0.${VERSION_WITHOUT_V}.apk"
            if [ "$variant" == "mobile" ]; then
              asset_name="my-tv-0.${VERSION_WITHOUT_V}.china-mobile.apk"
            elif [ "$variant" == "ipv6" ]; then
              asset_name="my-tv-0.${VERSION_WITHOUT_V}.ipv6.apk"
            fi
            echo "Uploading $signed_apk as $asset_name"
            curl -H "Authorization: token ${{ secrets.GH_PAGE_ACTION_TOKEN }}" \
                 -H "Content-Type: application/octet-stream" \
                 --data-binary @"$signed_apk" \
                 "${{ steps.create_release.outputs.upload_url }}?name=$asset_name"
          done